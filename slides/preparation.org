#+STARTUP: beamer
#+LATEX_CLASS: beamer
#+OPTIONS: H:2 num:2 toc:nil
#+BEAMER_THEME: Berkeley
#+BEAMER_COLOR_THEME: whale

# --- To make a handout, uncomment folowings.
# #+LATEX_HEADER: \usepackage{pgfpages}
# #+LATEX_CLASS_OPTIONS: [t, handout]
# #+LATEX_HEADER: \pgfpagesuselayout{4 on 1}[a4paper, landscape, border shrink=5mm]

# --- Guides
# - [[http://texdoc.net/texmf-dist/doc/latex/beamer/doc/beameruserguide.pdf][beameruserguide.pdf]]

# --- Memo
# - VirtualBoxの画面サイズを設定する方法
#   vboxmanage controlvm "Windows 7 (64 bit)" setvideomodehint 1280 720 32

# --- Title
#+TITLE: ビジネスアプリケーション演習
#+AUTHOR: 中鉢 欣秀 \\ yc@aiit.ac.jp
#+DATE:
#+LATEX_HEADER: \institute[AIIT]{産業技術大学院大学(AIIT)}

* 事前準備について
** 今回の内容
*** インストール作業
    - この演習で利用するツールをWindowsにインストールする手順について詳細に解説する
      - Mac/LinuxよりもWindowsのほうが難易度が高い
    - 他のOSを用いる場合は，この解説を参考に各自でインストールされたい
      - 大まかな流れはWindowsと共通なので，参考になるはず
*** 仮想化環境の設定
    - この内容は全OS共通である
    - 演習用の仮想化環境を構築する手順について説明する
** 演習で利用するPCと仮想化環境
*** ノートPCの準備
     - この演習では各自のノートPCを用いる
       - OSはWindows/Mac/Linuxのどれでも構わない
     - 事前に必要なソフトウエアをインストールしておく
     - PCを用意することが難しい方は事前に相談すること
*** 仮想化環境を用いた開発環境
     - 仮想化環境（VirtualBox）を用いてLinuxを動作させる
       - 仮想化により，どのOSでも共通の操作で開発作業ができる
       - 端末でのCUIの操作に慣れることもこの授業の目的である
** 仮想化による開発環境の統一化
*** Host OS
      - Windows
      - Mac
      - Linux
*** Guest OS
      - Linuxに統一
** Host OSにインストールするソフトウエア
*** [[http://git-scm.com/][Git]]
      - バージョンコントロールシステム（Ver 1.8以上）
*** [[https://www.virtualbox.org/][Oracle VM VirtualBox]]
      - 仮想化環境（Ver 4.3.12以上）
*** [[https://www.vagrantup.com/][Vagrant]]
      - 仮想化環境の構築ツール（Ver 1.5以上）
*** Guest OSのイメージファイル
      - カスタマイズ済のLinux
** 2通りのインストール方法
*** 手動による場合
      - Web Browserを用いて，各ソフトウエアをダウンロードしてインストール
*** パッケージ管理ツールを用いる場合
      - Windows
	- [[https://chocolatey.org/][Chocolatey Gallery]]
      - Mac
	- [[http://brew.sh/][Homebrew — The missing package manager for OS X]]
      - Linux
        - apt，yum等
** Windows環境でのインストール
*** Windows標準の端末について
    - Windowsの標準の端末はcmd.exe（またはPowerShell）であり，Mac/Linux環境と異なる
    - Windows版Gitに付属するGit bashを利用することで操作が統一できる
*** パッケージ管理ツールについて
    - Chocolateyを用いる
    - コマンドラインからパッケージ管理ツールを用いてインストール作業を解説する
** 作業の注意点
*** 注意点
   - 作業には，ネットワークからのダウンロード時間を含め，2時間程度かかる
   - ネットワーク接続の安定している場所で作業すること
     - エラーが出たら，まずはやり直してみること
*** スクリーンキャスト
   - スクリーンキャストを用意したので，これを見ながら解説する
     - 時間の節約のために，ところどころ早送りをしながら説明する
     - じっくり見たい方のために，これらのビデオもアップロードしておく
** 仮想化環境の設定
*** 仮想化環境について
   - VirtualBoxとVagrantのインストールが完了すると，コマンドラインから仮想化環境を制御することができる
*** 設定の内容
   - この演習で用いる仮想OSイメージのインストールや，Vagrantでの仮想環境の起動方法について解説する
   - この作業は全OS共通であり端末（bash）を用い，コマンドラインから行う
* インストール手順（Windows）
** Chocolateyのインストール
*** 手順
   1. ChocolatyのWebページを開く
      - http://chocolatey.org/
   2. Webからスクリプトをコピー
   3. 管理者権限で端末（cmd.exe）を起動
   4. 端末でスクリプトを実行
   5. インストールの確認
*** スクリーンキャスト
    - http://youtu.be/ZBtKgq9seKo

** Git，VirtualBoxとVagrantのインストール
*** 手順
   1. Git/VirtualBox/Vagrantをインストール
      - choco install -y git virtualbox vagrant
   2. インストールの確認
*** スクリーンキャスト
    - http://youtu.be/MQHDRIUP3hI

** Git bashの設定
*** 手順
   1. エクスプローラーの起動
   2. Gitのインストールフォルダを開く
   3. Git bashのショートカット作成
   4. Git bashの起動
   5. フォントの設定
   6. 作業フォルダの設定
   7. 起動の確認
*** スクリーンキャスト
    - http://youtu.be/eNlQpInE3Xg

* 仮想化環境の構築（各OS共通）
** 作業ディレクトリの作成
*** 解説
   - Vagrantを用いるためには，作業ディレクトリを作成する必要がある
   - Vagrantコマンドを利用する場合は，必ず作業ディレクトリに移動して行う
*** コマンド
#+begin_src bash
mkdir ~/enpit
cd ~/enpit
#+end_src

** Vagrantの初期化（Vagrantファイルの生成）
*** 解説
   - Vagrantを次のコマンドで初期化する
   - 作業ディレクトリにVagrantファイルができるので確認すること

*** コマンド
#+begin_src bash
vagrant init ychubachi/enpit
#+end_src

** Vagrantの起動（ダウンロード）
*** 解説
    - vagrantコマンドで仮想化環境を起動する
    - 初回既動時には自動的にboxファイルをダウンロードする

*** コマンド
#+begin_src bash
vagrant up
#+end_src
** Vagrant経由のログイン
*** 解説
- SSHで仮想化環境で動作するOSにログインできる
- 仮想的なOSから抜け出すにはexitする
*** コマンド（Host OS側）
#+begin_src bash
vagrant ssh
#+end_src
*** コマンド（Guest OS側）
#+begin_src bash
exit
#+end_src
** Vagrantによる仮想化環境の停止
*** 解説
- Vagrantを用いて仮想化環境を停止する
  - その際，例外が発生する場合があるようだ
- 停止すると，SSH接続はできなくなる
*** コマンド
#+begin_src bash
vagrant halt
#+end_src

** スクリーンキャスト
- ここまでの作業の流れを動画で解説する
  - http://youtu.be/FOGfCRXQmvM
* まとめ
** 今後の作業
   - 以後の作業はVagrantを用いて仮想化環境を起動し，SSHでログインして開発を行う
   - 端末（bash）を用いた操作になれ，効率的な開発ができるようになろう
** 注意点
   - vagrantコマンドを使うときは必ず，今回作成した作業ディレクトリにて行うこと
   - 自分が今，Host OSで作業しているのか，Guest OSで作業しているのかを常に意識する
   - スクリーンキャストをYouTubeで閲覧する際は解像度を高く（720p）する
